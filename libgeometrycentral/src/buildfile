# Default Target
# For automatic symbol exportation, a utility library needs to be built.
#
./: lib{geometrycentral}: libul{geometrycentral}

# Dependency Imports
#
import libs = Eigen%lib{Eigen}
import libs += nanoflann%lib{nanoflann}
import libs += libnanort%lib{nanort}
import libs += happly%lib{happly}

# Public headers.
#
pub = [dir_path] ../include/geometrycentral/
include $pub
pub_hdrs = $($pub/ pub_hdrs)
libul{geometrycentral}: $pub/{$pub_hdrs}

# Private headers and sources as well as dependencies.
# As Geometry Central does not use any export header functionality,
# we need a utility library to generate '.def' files
# for automatic DLL symbol exportation on Windows.
#
libul{geometrycentral}: $libs \
  utilities/{hxx ixx txx cxx}{* -unit_vector3} \
  numerical/{hxx ixx txx cxx}{*} \
  pointcloud/{hxx ixx txx cxx}{*} \
  surface/{hxx ixx txx cxx}{* -detect_symmetry -mesh_ray_tracer}

# Build options.
#
src_pfx_inc = [dir_path] $src_root/include/
src_pfx_src = [dir_path] $src_root/src/
cxx.poptions =+ "-I$src_pfx_src" "-I$src_pfx_inc"
#
# Automatic DLL Symbol Exporting
#
# See: https://build2.org/build2/doc/build2-build-system-manual.xhtml#cc-auto-symexport
#
libs{geometrycentral}: def{geometrycentral}: include = ($cxx.target.system == 'win32-msvc')
def{geometrycentral}: libul{geometrycentral}
if ($cxx.target.system == 'mingw32')
  cxx.loptions += -Wl,--export-all-symbols

# Export options.
#
lib{geometrycentral}:
{
  cxx.export.poptions = "-I$src_pfx_inc"
  cxx.export.libs = $libs
}

if ($cxx.target.class == 'windows')
{
  cxx.poptions += -DNOMINMAX -D_USE_MATH_DEFINES
  lib{geometrycentral}: cxx.export.poptions += -DNOMINMAX -D_USE_MATH_DEFINES
}

# For pre-releases use the complete version to make sure they cannot be used
# in place of another pre-release or the final version. See the version module
# for details on the version.* variable values.
#
# if $version.pre_release
#   lib{geometrycentral}: bin.lib.version = "-$version.project_id"
# else
#   lib{geometrycentral}: bin.lib.version = "-$version.major.$version.minor"

# Don't install private headers.
#
{hxx ixx txx}{*}: install = false
